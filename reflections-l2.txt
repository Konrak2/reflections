What happens when you initialize a repository? Why do you need to do it?

	create a working space in your own computer, thats where changes will be saved
	locally

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	the working directory is for the local state of the files
	when something is changed and added, it is saved in the status area, in order 
	to check what is going to be commited
	the repository holds the commit history
	
	staging area- changes to be made
	working directory- code up to date
	repository- snapshot of the code of the commit date

How can you use the staging area to make sure you have one commit per logical
change?

	always add to the staging area the related changes that compose one logical 
	change, even if in the working directory you have made more
	the changes that are going to be commited are the only ones added to the
	staging area

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	different mode
	experimental features

	keep working version separate from others
	
How do the diagrams help you visualize the branch structure?

	by giving a linear relationship of time among branches

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	by adding functionality without having to redevelop the feature(s)

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	
	automatically	-git can't always decide which changes to keep
			-too expensive computationally to make it that smart
			+saves time
			+accurate when there is no conflict
	always manually	-takes a lot of time
			+gives more control
